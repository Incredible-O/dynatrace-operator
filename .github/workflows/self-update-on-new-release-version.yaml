name: Self update codebase on new release
on:
  push:
    branches:
      - release-*

jobs:
  self-update-on-new-release:
    name: Self update when new release branch has been created
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: main
      - name: Install Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: '3.13'
      - name: Install python requirements
        run: make prerequisites/python
      - name: Find last 3 release branches
        run: |
          git fetch --prune --tags
          git branch -r --list 'origin/release-*' | sort --version-sort | tail -n 3 | tr -d ' ' > release-branches.txt

          echo latest branches:
          cat release-branches.txt
      - name: Update renovate file
        run: |
          source local/.venv/bin/activate
          python3 hack/build/ci/update-renovate-json5.py
      - name: Update e2e-tests-ondemand.yaml file
        run: |
          source local/.venv/bin/activate
          python3 hack/build/ci/update-e2e-ondemand-pipeline.py
      - name: Setup credentials to access github using app-token
        run: |
          git config --global url."https://x-access-token:${{ secrets.RELEASE_APP_TOKEN }}@github.com/".insteadOf https://github.com/
      - uses: actions/github-script@v8
        name: ttt
        with:
          github-token: ${{ secrets.RELEASE_APP_TOKEN }}
          script: |
            const repo = 'dynatrace-operator';
            const owner = 'Dynatrace';

            const result = await github.rest.pulls.create({
              title: 'Test',
              owner,
              repo,
              head: 'empty-test-branch',
              base: 'main',
              body: 'auto-generated, ignore ðŸ˜ƒ'
            })

            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: [ 'ci' ]
            })
